{"version":3,"sources":["pfe-codeblock-material-light.scss","../../pfe-sass/functions/_custom-properties.scss","pfe-codeblock.css","pfe-codeblock-material-dark.scss","../../../node_modules/prismjs/plugins/line-numbers/prism-line-numbers.css","pfe-codeblock.scss"],"names":[],"mappings":"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","file":"pfe-codeblock.css","sourcesContent":["//Define custom colors\n$custom-pink: #B300B3; // h1, p, body\n$custom-red: #C9190B; // \"javascript\", red, #eee\n$custom-blue: #06C; // <, </, >, height=\"\"\n$custom-purple: #40199A; // const, let, null, main, printf, return\n$custom-white: #F5F5F5; // Background\n$custom-gray: #6A6E73; // example, text, #include, stdio.h, int\n$custom-light-gray: #6A6E73; // Numbers and dividers\n$custom-black: #151515; // example html, some paragraph text\n$custom-hilight-fg: #263238; // Foreground color :selected\n$custom-hilight-bg: #cceae7; // Background color :selected\n\n:host {\n\tcode[class*=\"language-\"],\n\tpre[class*=\"language-\"] {\n\t\ttext-align: left;\n\t\twhite-space: pre;\n\t\tword-spacing: normal;\n\t\tword-break: normal;\n\t\tword-wrap: normal;\n\t\tcolor: $custom-gray;\n\t\tbackground: $custom-white;\n\t\tfont-family: pfe-var(font-family--code);\n\t\tfont-size: 1em;\n\t\tline-height: 1.5em;\n\t\ttab-size: 4;\n\t\thyphens: none;\n\t}\n\n\tcode[class*=\"language-\"]::selection,\n\tpre[class*=\"language-\"]::selection,\n\tcode[class*=\"language-\"] ::selection,\n\tpre[class*=\"language-\"] ::selection {\n\t\tbackground: $custom-hilight-bg;\n\t\tcolor: $custom-hilight-fg;\n\t}\n\n\t:not(pre) > code[class*=\"language-\"] {\n\t\twhite-space: normal;\n\t\tborder-radius: 0.2em;\n\t\tpadding: 0.1em;\n\t}\n\n\tpre[class*=\"language-\"] {\n\t\toverflow: auto;\n\t\tposition: relative;\n\t\tmargin: 0.5em 0;\n\t\tpadding: 1.25em 1em;\n\t}\n\n\t.language-css > code,\n\t.language-sass > code,\n\t.language-scss > code {\n\t\tcolor: $custom-pink;\n\t}\n\n\t[class*=\"language-\"] .namespace {\n\t\topacity: 0.7;\n\t}\n\n\t.token {\n\t\t&.atrule {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.attr-name {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.attr-value {\n\t\t\tcolor: $custom-pink;\n\t\t}\n\t\n\t\t&.attribute {\n\t\t\tcolor: $custom-pink;\n\t\t}\n\t\n\t\t&.boolean {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.builtin {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.cdata {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.char {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.class {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.class-name {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.comment {\n\t\t\tcolor: $custom-light-gray;\n\t\t}\n\t\n\t\t&.constant {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.deleted {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t\n\t\t&.doctype {\n\t\t\tcolor: $custom-light-gray;\n\t\t}\n\t\n\t\t&.entity {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t\n\t\t&.function {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.hexcode {\n\t\t\tcolor: $custom-pink;\n\t\t}\n\t\n\t\t&.id {\n\t\t\tcolor:$custom-purple;\n\t\t\tfont-weight: bold;\n\t\t}\n\t\n\t\t&.important {\n\t\t\tcolor: $custom-purple;\n\t\t\tfont-weight: bold;\n\t\t}\n\t\n\t\t&.inserted {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.keyword {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.number {\n\t\t\tcolor:$custom-pink;\n\t\t}\n\t\n\t\t&.operator {\n\t\t\tcolor:$custom-blue;\n\t\t}\n\t\n\t\t&.prolog {\n\t\t\tcolor: $custom-light-gray;\n\t\t}\n\t\n\t\t&.property {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.pseudo-class {\n\t\t\tcolor: $custom-pink;\n\t\t}\n\t\n\t\t&.pseudo-element {\n\t\t\tcolor: $custom-pink;\n\t\t}\n\t\n\t\t&.punctuation {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.regex {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.selector {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t\n\t\t&.string {\n\t\t\tcolor: $custom-pink;\n\t\t}\n\t\n\t\t&.symbol {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.tag {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t\n\t\t&.unit {\n\t\t\tcolor: $custom-pink;\n\t\t}\n\t\n\t\t&.url {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t\n\t\t&.variable {\n\t\t\tcolor: $custom-red;\n\t\t}\t\n\t}\n}\n","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// Get full theme stack with a fallback from the provided map - used by pfe-var and pfe-zindex\n/// @param {String} $category  - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map  - Sass map of variables\n/// @param {String} $fallback [null]  - Optional fallback override\n/// @param {Boolean} $use-fallback [true]  - Optional hook to return a stack with no fallback value\n/// @requires $custom-prop-prefix\n/// @return {String} theme stack with fallback value from a sass map\n@function pfe-get-from-map($category, $key, $map, $fallback: null, $prefix: \"#{$custom-prop-prefix}-theme\", $use-fallback: true) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$prefix}--\";\n    @if $prefix == \"pf-c\" {\n        $var-declaration: \"--#{$prefix}-\";  // one dash at the end\n    }\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $use-fallback and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n\n\n/// Returns CSS Var for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example\n///   :host {\n///       padding-top:      #{pfe-local(paddingTop)};\n///       padding-bottom:   #{pfe-local(paddingBottom)};\n///   }\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$custom-prop-prefix}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// Fetches a CSS variable stack for broadcasted variables, providing a hook for context\n/// to influence the styles of children elements such as p tags or links.\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $custom-prop-prefix - Name of repo, which is \"pfe\"\n/// @example - scss\n///   :host {\n///     color: pfe-broadcasted(link);\n///   }\n/// @example - css\n///   :host {\n///     color: var(--pfe-broadcasted--link, #06c);\n///   }\n@function pfe-broadcasted($broadcast, $use-fallback: true) {\n    $fallback: \"\";\n    @if $use-fallback {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\t\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$custom-prop-prefix}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$custom-prop-prefix}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @see $pfe-zindex\n/// @example - scss - In your component styles\n///   .my-element {\n///     z-index: pfe-zindex( content );\n///   }\n\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n/// @param {String} $name - Name of the key for the map\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example - scss - In your component styles\n///   .my-element {\n///     background-color: pfe-fetch( ui-base );\n///   }\n@function pfe-fetch($name, $region: null) {\n    $var-name: to-string($name, \"--\");\n    @if $region != null and map-deep-get($LOCAL-VARIABLES, $region, $var-name) != null {\n        @return map-deep-get($LOCAL-VARIABLES, $region, $var-name);\n    }\n    @else if $region == null and map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @else if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return map-get($pfe-typography-base, $var-name);\n    }\n\n    // PATTERNFLY CORE\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return map-get($pf-type-sizing, $var-name);\n    }\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return map-get($pf-type-sizing--component, $var-name);\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return map-get($pf-type-sizing--modifers, $var-name);\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return map-get($pf-type-sizing--content, $var-name);\n    }\n    // DEPRECATED\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-base-deprecated, $var-name);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-deprecated, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example scss - In your component styles\n///   .my-element {\n///     padding:     pfe-var( container-spacer );\n///     font-size:   pfe-var( font-size );\n///   }\n/// @example - css Rendered output\n///   .my-element {\n///      padding: var(--pfe-theme--container-spacer, 16px);\n///      font-size: var(--pfe-theme--font-size, 16px);\n///   }\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base, $fallback);\n    }\n    // PATTERNFLY CORE:\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing, $fallback, $prefix: \"pf-global\");\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--modifers, $fallback, $prefix: \"pf-c\");\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--content, $fallback, $prefix: \"pf-c\");\n    }\n    // PFE components (must be below core)\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--component, $fallback);\n    }\n\n    // DEPRECATED:\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base-deprecated, $fallback);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-deprecated, $fallback);\n    }\n\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}",":host code[class*=\"language-\"],\n:host pre[class*=\"language-\"] {\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  color: #6A6E73;\n  background: #F5F5F5;\n  font-family: var(--pfe-theme--font-family--code, \"Overpass Mono\", Consolas, Monaco, \"Andale Mono\", monospace);\n  font-size: 1em;\n  line-height: 1.5em;\n  tab-size: 4;\n  hyphens: none;\n}\n\n:host code[class*=\"language-\"]::selection,\n:host pre[class*=\"language-\"]::selection,\n:host code[class*=\"language-\"] ::selection,\n:host pre[class*=\"language-\"] ::selection {\n  background: #cceae7;\n  color: #263238;\n}\n\n:host :not(pre) > code[class*=\"language-\"] {\n  white-space: normal;\n  border-radius: 0.2em;\n  padding: 0.1em;\n}\n\n:host pre[class*=\"language-\"] {\n  overflow: auto;\n  position: relative;\n  margin: 0.5em 0;\n  padding: 1.25em 1em;\n}\n\n:host .language-css > code,\n:host .language-sass > code,\n:host .language-scss > code {\n  color: #B300B3;\n}\n\n:host [class*=\"language-\"] .namespace {\n  opacity: 0.7;\n}\n\n:host .token.atrule {\n  color: #40199A;\n}\n\n:host .token.attr-name {\n  color: #06C;\n}\n\n:host .token.attr-value {\n  color: #B300B3;\n}\n\n:host .token.attribute {\n  color: #B300B3;\n}\n\n:host .token.boolean {\n  color: #40199A;\n}\n\n:host .token.builtin {\n  color: #06C;\n}\n\n:host .token.cdata {\n  color: #06C;\n}\n\n:host .token.char {\n  color: #06C;\n}\n\n:host .token.class {\n  color: #06C;\n}\n\n:host .token.class-name {\n  color: #06C;\n}\n\n:host .token.comment {\n  color: #6A6E73;\n}\n\n:host .token.constant {\n  color: #40199A;\n}\n\n:host .token.deleted {\n  color: #C9190B;\n}\n\n:host .token.doctype {\n  color: #6A6E73;\n}\n\n:host .token.entity {\n  color: #C9190B;\n}\n\n:host .token.function {\n  color: #40199A;\n}\n\n:host .token.hexcode {\n  color: #B300B3;\n}\n\n:host .token.id {\n  color: #40199A;\n  font-weight: bold;\n}\n\n:host .token.important {\n  color: #40199A;\n  font-weight: bold;\n}\n\n:host .token.inserted {\n  color: #06C;\n}\n\n:host .token.keyword {\n  color: #40199A;\n}\n\n:host .token.number {\n  color: #B300B3;\n}\n\n:host .token.operator {\n  color: #06C;\n}\n\n:host .token.prolog {\n  color: #6A6E73;\n}\n\n:host .token.property {\n  color: #06C;\n}\n\n:host .token.pseudo-class {\n  color: #B300B3;\n}\n\n:host .token.pseudo-element {\n  color: #B300B3;\n}\n\n:host .token.punctuation {\n  color: #06C;\n}\n\n:host .token.regex {\n  color: #06C;\n}\n\n:host .token.selector {\n  color: #C9190B;\n}\n\n:host .token.string {\n  color: #B300B3;\n}\n\n:host .token.symbol {\n  color: #40199A;\n}\n\n:host .token.tag {\n  color: #C9190B;\n}\n\n:host .token.unit {\n  color: #B300B3;\n}\n\n:host .token.url {\n  color: #C9190B;\n}\n\n:host .token.variable {\n  color: #C9190B;\n}\n\n:host([code-theme=\"dark\"]) code[class*=\"language-\"],\n:host([code-theme=\"dark\"]) pre[class*=\"language-\"] {\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  color: #D2D2D2;\n  background: #3C3F42;\n  font-family: var(--pfe-theme--font-family--code, \"Overpass Mono\", Consolas, Monaco, \"Andale Mono\", monospace);\n  font-size: 1em;\n  line-height: 1.5em;\n  tab-size: 4;\n  hyphens: none;\n}\n\n:host([code-theme=\"dark\"]) code[class*=\"language-\"]::selection,\n:host([code-theme=\"dark\"]) pre[class*=\"language-\"]::selection,\n:host([code-theme=\"dark\"]) code[class*=\"language-\"] ::selection,\n:host([code-theme=\"dark\"]) pre[class*=\"language-\"] ::selection {\n  background: #363636;\n}\n\n:host([code-theme=\"dark\"]) :not(pre) > code[class*=\"language-\"] {\n  white-space: normal;\n  border-radius: 0.2em;\n  padding: 0.1em;\n}\n\n:host([code-theme=\"dark\"]) pre[class*=\"language-\"] {\n  overflow: auto;\n  position: relative;\n  margin: 0.5em 0;\n  padding: 1.25em 1em;\n}\n\n:host([code-theme=\"dark\"]) pre[class*=\"language-\"].line-numbers {\n  position: relative;\n  padding-left: 3.8em;\n  counter-reset: linenumber;\n}\n\n:host([code-theme=\"dark\"]) .language-css > code,\n:host([code-theme=\"dark\"]) .language-sass > code,\n:host([code-theme=\"dark\"]) .language-scss > code {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) [class*=\"language-\"] .namespace {\n  opacity: 0.7;\n}\n\n:host([code-theme=\"dark\"]) .token.atrule {\n  color: #B2A3FF;\n}\n\n:host([code-theme=\"dark\"]) .token.attr-name {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) .token.attr-value {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) .token.attribute {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) .token.boolean {\n  color: #B2A3FF;\n}\n\n:host([code-theme=\"dark\"]) .token.builtin {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) .token.cdata {\n  color: #73BCF7;\n}\n\n:host([code-theme=\"dark\"]) .token.char {\n  color: #73BCF7;\n}\n\n:host([code-theme=\"dark\"]) .token.class {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) .token.class-name {\n  color: #73BCF7;\n}\n\n:host([code-theme=\"dark\"]) .token.comment {\n  color: #D2D2D2;\n}\n\n:host([code-theme=\"dark\"]) .token.constant {\n  color: #B2A3FF;\n}\n\n:host([code-theme=\"dark\"]) .token.deleted {\n  color: #FF8A80;\n}\n\n:host([code-theme=\"dark\"]) .token.doctype {\n  color: #D2D2D2;\n}\n\n:host([code-theme=\"dark\"]) .token.entity {\n  color: #FF8A80;\n}\n\n:host([code-theme=\"dark\"]) .token.function {\n  color: #B2A3FF;\n}\n\n:host([code-theme=\"dark\"]) .token.hexcode {\n  color: #73BCF7;\n}\n\n:host([code-theme=\"dark\"]) .token.id {\n  color: #B2A3FF;\n  font-weight: bold;\n}\n\n:host([code-theme=\"dark\"]) .token.important {\n  color: #B2A3FF;\n  font-weight: bold;\n}\n\n:host([code-theme=\"dark\"]) .token.inserted {\n  color: #73BCF7;\n}\n\n:host([code-theme=\"dark\"]) .token.keyword {\n  color: #B2A3FF;\n}\n\n:host([code-theme=\"dark\"]) .token.number {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) .token.operator {\n  color: #73BCF7;\n}\n\n:host([code-theme=\"dark\"]) .token.prolog {\n  color: #D2D2D2;\n}\n\n:host([code-theme=\"dark\"]) .token.property {\n  color: #73BCF7;\n}\n\n:host([code-theme=\"dark\"]) .token.pseudo-class {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) .token.pseudo-element {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) .token.punctuation {\n  color: #73BCF7;\n}\n\n:host([code-theme=\"dark\"]) .token.regex {\n  color: #73BCF7;\n}\n\n:host([code-theme=\"dark\"]) .token.selector {\n  color: #FF8A80;\n}\n\n:host([code-theme=\"dark\"]) .token.string {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) .token.symbol {\n  color: #B2A3FF;\n}\n\n:host([code-theme=\"dark\"]) .token.tag {\n  color: #FF8A80;\n}\n\n:host([code-theme=\"dark\"]) .token.unit {\n  color: #ACE12E;\n}\n\n:host([code-theme=\"dark\"]) .token.url {\n  color: #FF8A80;\n}\n\n:host([code-theme=\"dark\"]) .token.variable {\n  color: #FF8A80;\n}\n\npre[class*=\"language-\"].line-numbers {\n  position: relative;\n  padding-left: 3.8em;\n  counter-reset: linenumber;\n}\n\npre[class*=\"language-\"].line-numbers > code {\n  position: relative;\n  white-space: inherit;\n}\n\n.line-numbers .line-numbers-rows {\n  position: absolute;\n  pointer-events: none;\n  top: 0;\n  font-size: 100%;\n  left: -3.8em;\n  width: 3em;\n  /* works for line-numbers below 1000 lines */\n  letter-spacing: -1px;\n  border-right: 1px solid #999;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.line-numbers-rows > span {\n  display: block;\n  counter-increment: linenumber;\n}\n\n.line-numbers-rows > span:before {\n  content: counter(linenumber);\n  color: #999;\n  display: block;\n  padding-right: 0.8em;\n  text-align: right;\n}\n\n:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n","//Define custom colors\n$custom-red: #FF8A80; // h1, p, body\n$custom-green: #ACE12E; // \"javascript\", red, #eee\n$custom-blue: #73BCF7; // <, </, >, height=\"\", height, width, cx, cy, etc.\n$custom-purple: #B2A3FF; // const, let, null, main, printf, return\n$custom-black: #3C3F42; // Background\n$custom-gray: #D2D2D2; // example, text, #include, stdio.h, int\n$custom-dark-gray: #D2D2D2; // Numbers and dividers\n$custom-white: #FFF; // example html, some paragraph text\n$custom-hilight-bg: #363636; // Background color :selected\n\n:host([code-theme=\"dark\"]) {\n\tcode[class*=\"language-\"],\n\tpre[class*=\"language-\"] {\n\t\ttext-align: left;\n\t\twhite-space: pre;\n\t\tword-spacing: normal;\n\t\tword-break: normal;\n\t\tword-wrap: normal;\n\t\tcolor: $custom-gray;\n\t\tbackground: $custom-black;\n\t\tfont-family: pfe-var(font-family--code);\n\t\tfont-size: 1em;\n\t\tline-height: 1.5em;\n\t\ttab-size: 4;\n\t\thyphens: none;\n\t}\n\n\tcode[class*=\"language-\"]::selection,\n\tpre[class*=\"language-\"]::selection,\n\tcode[class*=\"language-\"] ::selection,\n\tpre[class*=\"language-\"] ::selection {\n\t\tbackground: $custom-hilight-bg;\n\t}\n\n\t:not(pre) > code[class*=\"language-\"] {\n\t\twhite-space: normal;\n\t\tborder-radius: 0.2em;\n\t\tpadding: 0.1em;\n\t}\n\n\tpre[class*=\"language-\"] {\n\t\toverflow: auto;\n\t\tposition: relative;\n\t\tmargin: 0.5em 0;\n\t\tpadding: 1.25em 1em;\n\t\t&.line-numbers {\n\t\t\tposition: relative;\n\t\t\tpadding-left: 3.8em;\n\t\t\tcounter-reset: linenumber;\n\t\t}\n\t}\n\n\t.language-css > code,\n\t.language-sass > code,\n\t.language-scss > code {\n\t\tcolor: $custom-green;\n\t}\n\n\t[class*=\"language-\"] .namespace {\n\t\topacity: 0.7;\n\t}\n\n\t.token {\n\t\t&.atrule {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.attr-name {\n\t\t\tcolor: $custom-green;\n\t\t}\n\t\n\t\t&.attr-value {\n\t\t\tcolor: $custom-green;\n\t\t}\n\t\n\t\t&.attribute {\n\t\t\tcolor: $custom-green;\n\t\t}\n\t\n\t\t&.boolean {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.builtin {\n\t\t\tcolor: $custom-green;\n\t\t}\n\t\n\t\t&.cdata {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.char {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.class {\n\t\t\tcolor: $custom-green;\n\t\t}\n\t\n\t\t&.class-name {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.comment {\n\t\t\tcolor: $custom-dark-gray;\n\t\t}\n\t\n\t\t&.constant {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.deleted {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t\n\t\t&.doctype {\n\t\t\tcolor: $custom-dark-gray;\n\t\t}\n\t\n\t\t&.entity {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t\n\t\t&.function {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.hexcode {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.id {\n\t\t\tcolor: $custom-purple;\n\t\t\tfont-weight: bold;\n\t\t}\n\t\n\t\t&.important {\n\t\t\tcolor: $custom-purple;\n\t\t\tfont-weight: bold;\n\t\t}\n\t\n\t\t&.inserted {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.keyword {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.number {\n\t\t\tcolor: $custom-green;\n\t\t}\n\t\n\t\t&.operator {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.prolog {\n\t\t\tcolor: $custom-dark-gray;\n\t\t}\n\t\n\t\t&.property {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.pseudo-class {\n\t\t\tcolor: $custom-green;\n\t\t}\n\t\n\t\t&.pseudo-element {\n\t\t\tcolor: $custom-green;\n\t\t}\n\t\n\t\t&.punctuation {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.regex {\n\t\t\tcolor: $custom-blue;\n\t\t}\n\t\n\t\t&.selector {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t\n\t\t&.string {\n\t\t\tcolor: $custom-green;\n\t\t}\n\t\n\t\t&.symbol {\n\t\t\tcolor: $custom-purple;\n\t\t}\n\t\n\t\t&.tag {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t\n\t\t&.unit {\n\t\t\tcolor: $custom-green;\n\t\t}\n\t\n\t\t&.url {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t\n\t\t&.variable {\n\t\t\tcolor: $custom-red;\n\t\t}\n\t}\n}","pre[class*=\"language-\"].line-numbers {\n\tposition: relative;\n\tpadding-left: 3.8em;\n\tcounter-reset: linenumber;\n}\n\npre[class*=\"language-\"].line-numbers > code {\n\tposition: relative;\n\twhite-space: inherit;\n}\n\n.line-numbers .line-numbers-rows {\n\tposition: absolute;\n\tpointer-events: none;\n\ttop: 0;\n\tfont-size: 100%;\n\tleft: -3.8em;\n\twidth: 3em; /* works for line-numbers below 1000 lines */\n\tletter-spacing: -1px;\n\tborder-right: 1px solid #999;\n\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n\n}\n\n\t.line-numbers-rows > span {\n\t\tdisplay: block;\n\t\tcounter-increment: linenumber;\n\t}\n\n\t\t.line-numbers-rows > span:before {\n\t\t\tcontent: counter(linenumber);\n\t\t\tcolor: #999;\n\t\t\tdisplay: block;\n\t\t\tpadding-right: 0.8em;\n\t\t\ttext-align: right;\n\t\t}\n","@import \"../../pfe-sass/pfe-sass\";\n\n@import \"pfe-codeblock-material-light\";\n@import \"pfe-codeblock-material-dark\";\n\n@import \"prismjs/plugins/line-numbers/prism-line-numbers\";\n\n:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n\n"],"sourceRoot":"../src"}