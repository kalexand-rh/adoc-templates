{"version":3,"file":"pfe-codeblock.umd.min.js","sources":["../_temp/polyfills--pfe-codeblock.js","../../../node_modules/prismjs/prism.js","../_temp/pfe-codeblock.umd.js"],"sourcesContent":["// Polyfills\n// @POLYFILL  Array.includes\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\nif (!Array.prototype.includes) {\n  Object.defineProperty(Array.prototype, \"includes\", {\n    value: function (valueToFind, fromIndex) {\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      // 1. Let O be ? ToObject(this value).\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If len is 0, return false.\n      if (len === 0) {\n        return false;\n      }\n\n      // 4. Let n be ? ToInteger(fromIndex).\n      //    (If fromIndex is undefined, this step produces the value 0.)\n      var n = fromIndex | 0;\n\n      // 5. If n â‰¥ 0, then\n      //  a. Let k be n.\n      // 6. Else n < 0,\n      //  a. Let k be len + n.\n      //  b. If k < 0, let k be 0.\n      var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n      function sameValueZero(x, y) {\n        return x === y || (typeof x === \"number\" && typeof y === \"number\" && isNaN(x) && isNaN(y));\n      }\n\n      // 7. Repeat, while k < len\n      while (k < len) {\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n        // b. If SameValueZero(valueToFind, elementK) is true, return true.\n        if (sameValueZero(o[k], valueToFind)) {\n          return true;\n        }\n        // c. Increase k by 1.\n        k++;\n      }\n\n      // 8. Return false\n      return false;\n    },\n  });\n}\n// End Polyfills\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\t/**\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t * additional languages or plugins yourself.\n\t *\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t *\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t * empty Prism object into the global scope before loading the Prism script like this:\n\t *\n\t * ```js\n\t * window.Prism = window.Prism || {};\n\t * Prism.manual = true;\n\t * // add a new <script> to load Prism's script\n\t * ```\n\t *\n\t * @default false\n\t * @type {boolean}\n\t * @memberof Prism\n\t * @public\n\t */\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t/**\n\t * A namespace for utility methods.\n\t *\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t * change or disappear at any time.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t */\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the name of the type of the given value.\n\t\t *\n\t\t * @param {any} o\n\t\t * @returns {string}\n\t\t * @example\n\t\t * type(null)      === 'Null'\n\t\t * type(undefined) === 'Undefined'\n\t\t * type(123)       === 'Number'\n\t\t * type('foo')     === 'String'\n\t\t * type(true)      === 'Boolean'\n\t\t * type([1, 2])    === 'Array'\n\t\t * type({})        === 'Object'\n\t\t * type(String)    === 'Function'\n\t\t * type(/abc+/)    === 'RegExp'\n\t\t */\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @returns {number}\n\t\t */\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t/**\n\t\t * Creates a deep clone of the given object.\n\t\t *\n\t\t * The main intended use of this function is to clone language definitions.\n\t\t *\n\t\t * @param {T} o\n\t\t * @param {Record<number, any>} [visited]\n\t\t * @returns {T}\n\t\t * @template T\n\t\t */\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar clone, id;\n\t\t\tswitch (_.util.type(o)) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns whether a given class is active for `element`.\n\t\t *\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t * given class is just the given class with a `no-` prefix.\n\t\t *\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t *\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t * version of it, the class is considered active.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @param {string} className\n\t\t * @param {boolean} [defaultActivation=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function (element, className, defaultActivation) {\n\t\t\tvar no = 'no-' + className;\n\n\t\t\twhile (element) {\n\t\t\t\tvar classList = element.classList;\n\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\treturn !!defaultActivation;\n\t\t}\n\t},\n\n\t/**\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\tlanguages: {\n\t\t/**\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t *\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t * will be overwritten at its original position.\n\t\t *\n\t\t * ## Best practices\n\t\t *\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t *\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t *\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t * @param {Grammar} redef The new tokens to append.\n\t\t * @returns {Grammar} The new language created.\n\t\t * @public\n\t\t * @example\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t *     // at its original position\n\t\t *     'comment': { ... },\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t * });\n\t\t */\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t *\n\t\t * ## Usage\n\t\t *\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t * this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.markup.style = {\n\t\t *     // token\n\t\t * };\n\t\t * ```\n\t\t *\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t *     'style': {\n\t\t *         // token\n\t\t *     }\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Special cases\n\t\t *\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t * will be ignored.\n\t\t *\n\t\t * This behavior can be used to insert tokens after `before`:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t *     'comment': Prism.languages.markup.comment,\n\t\t *     // tokens after 'comment'\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Limitations\n\t\t *\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t *\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t *\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t *\n\t\t * ```js\n\t\t * var oldMarkup = Prism.languages.markup;\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t *\n\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t * ```\n\t\t *\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t * object to be modified.\n\t\t * @param {string} before The key to insert before.\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t * object to be modified.\n\t\t *\n\t\t * Defaults to `Prism.languages`.\n\t\t * @returns {Grammar} The new grammar object.\n\t\t * @public\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\tvar grammar = root[inside];\n\t\t\t/** @type {Grammar} */\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tplugins: {},\n\n\t/**\n\t * This is the most high-level function in Prismâ€™s API.\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t * each one of them.\n\t *\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t *\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\t/**\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t * {@link Prism.highlightElement} on each one of them.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-highlightall`\n\t * 2. `before-all-elements-highlight`\n\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t *\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\t/**\n\t * Highlights the code inside a single element.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-sanity-check`\n\t * 2. `before-highlight`\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t * 4. `before-insert`\n\t * 5. `after-highlight`\n\t * 6. `complete`\n\t *\n\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t * the element's language.\n\t *\n\t * @param {Element} element The element containing the code.\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t *\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t * asynchronous highlighting to work. You can build your own bundle on the\n\t * [Download page](https://prismjs.com/download.html).\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\t/**\n\t * Low-level function, only use if you know what youâ€™re doing. It accepts a string of text as input\n\t * and the language definitions to use, and returns a string with the HTML produced.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-tokenize`\n\t * 2. `after-tokenize`\n\t * 3. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @param {string} language The name of the language definition passed to `grammar`.\n\t * @returns {string} The highlighted HTML.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t */\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\t/**\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t * and the language definitions to use, and returns an array with the tokenized code.\n\t *\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t *\n\t * This method could be useful in other contexts as well, as a very crude parser.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * let code = `var foo = 0;`;\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t * tokens.forEach(token => {\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t *         console.log(`Found numeric literal: ${token.content}`);\n\t *     }\n\t * });\n\t */\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\t/**\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\thooks: {\n\t\tall: {},\n\n\t\t/**\n\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t *\n\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t *\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t * @public\n\t\t */\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\t/**\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t *\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t * @public\n\t\t */\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n_self.Prism = _;\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n\t/**\n\t * The type of the token.\n\t *\n\t * This is usually the key of a pattern in a {@link Grammar}.\n\t *\n\t * @type {string}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.type = type;\n\t/**\n\t * The strings or tokens contained by this token.\n\t *\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t *\n\t * @type {string | TokenStream}\n\t * @public\n\t */\n\tthis.content = content;\n\t/**\n\t * The alias(es) of the token.\n\t *\n\t * @type {string|string[]}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * Converts the given token or token stream to an HTML representation.\n *\n * The following hooks will be run:\n * 1. `wrap`: On each {@link Token}.\n *\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\n * @param {string} language The name of current language.\n * @returns {string} The HTML representation of the token or token stream.\n * @memberof Token\n * @static\n */\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */\nfunction matchPattern(pattern, pos, text, lookbehind) {\n\tpattern.lastIndex = pos;\n\tvar match = pattern.exec(text);\n\tif (match && lookbehind && match[1]) {\n\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\tvar lookbehindLength = match[1].length;\n\t\tmatch.index += lookbehindLength;\n\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t}\n\treturn match;\n}\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j],\n\t\t\t\tinside = patternObj.inside,\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\n\t\t\t\tgreedy = !!patternObj.greedy,\n\t\t\t\talias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\tvar match;\n\n\t\t\t\tif (greedy) {\n\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index,\n\t\t\t\t\tmatchStr = match[0],\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(from + matchStr.length);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n// Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'style': {\n\t\t\t\t\t\t\t\tpattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\talias: 'language-css',\n\t\t\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'attr-name': /^style/i\n\t\t\t\t}\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-flags': /[a-z]+$/,\n\t\t\t'regex-delimiter': /^\\/|\\/$/\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar Prism = window.Prism;\n\n\tvar LOADING_MESSAGE = 'Loadingâ€¦';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn 'âœ– Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = 'âœ– Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n\t/**\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} language\n\t * @returns {void}\n\t */\n\tfunction setLanguageClass(element, language) {\n\t\tvar className = element.className;\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\n\t}\n\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tsetLanguageClass(code, language);\n\t\t\tsetLanguageClass(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', src, true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t\t// highlight code\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\t\t\t\t\tPrism.highlightElement(code);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// mark as failed\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send(null);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; element = elements[i++];) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t}\n\n})();\n","/*!\n * PatternFly Elements: PfeCodeblock 1.11.0\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\n// Import polyfills: Array.includes\nimport \"./polyfills--pfe-codeblock.js\";\n\nimport PFElement from \"../../pfelement/dist/pfelement\";\nimport Prism from \"prismjs\";\n\nconst observerConfig = {\n  childList: true,\n  subtree: true,\n  characterData: true,\n};\n\nclass PfeCodeblock extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.11.0\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>:host code[class*=language-],:host pre[class*=language-]{text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;color:#6a6e73;background:#f5f5f5;font-family:\"Overpass Mono\",Consolas,Monaco,\"Andale Mono\",monospace;font-family:var(--pfe-theme--font-family--code, \"Overpass Mono\", Consolas, Monaco, \"Andale Mono\", monospace);font-size:1em;line-height:1.5em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none}:host code[class*=language-] ::-moz-selection,:host code[class*=language-]::-moz-selection,:host pre[class*=language-] ::-moz-selection,:host pre[class*=language-]::-moz-selection{background:#cceae7;color:#263238}:host code[class*=language-] ::selection,:host code[class*=language-]::selection,:host pre[class*=language-] ::selection,:host pre[class*=language-]::selection{background:#cceae7;color:#263238}:host :not(pre)>code[class*=language-]{white-space:normal;border-radius:.2em;padding:.1em}:host pre[class*=language-]{overflow:auto;position:relative;margin:.5em 0;padding:1.25em 1em}:host .language-css>code,:host .language-sass>code,:host .language-scss>code{color:#b300b3}:host [class*=language-] .namespace{opacity:.7}:host .token.atrule{color:#40199a}:host .token.attr-name{color:#06c}:host .token.attr-value{color:#b300b3}:host .token.attribute{color:#b300b3}:host .token.boolean{color:#40199a}:host .token.builtin{color:#06c}:host .token.cdata{color:#06c}:host .token.char{color:#06c}:host .token.class{color:#06c}:host .token.class-name{color:#06c}:host .token.comment{color:#6a6e73}:host .token.constant{color:#40199a}:host .token.deleted{color:#c9190b}:host .token.doctype{color:#6a6e73}:host .token.entity{color:#c9190b}:host .token.function{color:#40199a}:host .token.hexcode{color:#b300b3}:host .token.id{color:#40199a;font-weight:700}:host .token.important{color:#40199a;font-weight:700}:host .token.inserted{color:#06c}:host .token.keyword{color:#40199a}:host .token.number{color:#b300b3}:host .token.operator{color:#06c}:host .token.prolog{color:#6a6e73}:host .token.property{color:#06c}:host .token.pseudo-class{color:#b300b3}:host .token.pseudo-element{color:#b300b3}:host .token.punctuation{color:#06c}:host .token.regex{color:#06c}:host .token.selector{color:#c9190b}:host .token.string{color:#b300b3}:host .token.symbol{color:#40199a}:host .token.tag{color:#c9190b}:host .token.unit{color:#b300b3}:host .token.url{color:#c9190b}:host .token.variable{color:#c9190b}:host([code-theme=dark]) code[class*=language-],:host([code-theme=dark]) pre[class*=language-]{text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;color:#d2d2d2;background:#3c3f42;font-family:\"Overpass Mono\",Consolas,Monaco,\"Andale Mono\",monospace;font-family:var(--pfe-theme--font-family--code, \"Overpass Mono\", Consolas, Monaco, \"Andale Mono\", monospace);font-size:1em;line-height:1.5em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none}:host([code-theme=dark]) code[class*=language-] ::-moz-selection,:host([code-theme=dark]) code[class*=language-]::-moz-selection,:host([code-theme=dark]) pre[class*=language-] ::-moz-selection,:host([code-theme=dark]) pre[class*=language-]::-moz-selection{background:#363636}:host([code-theme=dark]) code[class*=language-] ::selection,:host([code-theme=dark]) code[class*=language-]::selection,:host([code-theme=dark]) pre[class*=language-] ::selection,:host([code-theme=dark]) pre[class*=language-]::selection{background:#363636}:host([code-theme=dark]) :not(pre)>code[class*=language-]{white-space:normal;border-radius:.2em;padding:.1em}:host([code-theme=dark]) pre[class*=language-]{overflow:auto;position:relative;margin:.5em 0;padding:1.25em 1em}:host([code-theme=dark]) pre[class*=language-].line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}:host([code-theme=dark]) .language-css>code,:host([code-theme=dark]) .language-sass>code,:host([code-theme=dark]) .language-scss>code{color:#ace12e}:host([code-theme=dark]) [class*=language-] .namespace{opacity:.7}:host([code-theme=dark]) .token.atrule{color:#b2a3ff}:host([code-theme=dark]) .token.attr-name{color:#ace12e}:host([code-theme=dark]) .token.attr-value{color:#ace12e}:host([code-theme=dark]) .token.attribute{color:#ace12e}:host([code-theme=dark]) .token.boolean{color:#b2a3ff}:host([code-theme=dark]) .token.builtin{color:#ace12e}:host([code-theme=dark]) .token.cdata{color:#73bcf7}:host([code-theme=dark]) .token.char{color:#73bcf7}:host([code-theme=dark]) .token.class{color:#ace12e}:host([code-theme=dark]) .token.class-name{color:#73bcf7}:host([code-theme=dark]) .token.comment{color:#d2d2d2}:host([code-theme=dark]) .token.constant{color:#b2a3ff}:host([code-theme=dark]) .token.deleted{color:#ff8a80}:host([code-theme=dark]) .token.doctype{color:#d2d2d2}:host([code-theme=dark]) .token.entity{color:#ff8a80}:host([code-theme=dark]) .token.function{color:#b2a3ff}:host([code-theme=dark]) .token.hexcode{color:#73bcf7}:host([code-theme=dark]) .token.id{color:#b2a3ff;font-weight:700}:host([code-theme=dark]) .token.important{color:#b2a3ff;font-weight:700}:host([code-theme=dark]) .token.inserted{color:#73bcf7}:host([code-theme=dark]) .token.keyword{color:#b2a3ff}:host([code-theme=dark]) .token.number{color:#ace12e}:host([code-theme=dark]) .token.operator{color:#73bcf7}:host([code-theme=dark]) .token.prolog{color:#d2d2d2}:host([code-theme=dark]) .token.property{color:#73bcf7}:host([code-theme=dark]) .token.pseudo-class{color:#ace12e}:host([code-theme=dark]) .token.pseudo-element{color:#ace12e}:host([code-theme=dark]) .token.punctuation{color:#73bcf7}:host([code-theme=dark]) .token.regex{color:#73bcf7}:host([code-theme=dark]) .token.selector{color:#ff8a80}:host([code-theme=dark]) .token.string{color:#ace12e}:host([code-theme=dark]) .token.symbol{color:#b2a3ff}:host([code-theme=dark]) .token.tag{color:#ff8a80}:host([code-theme=dark]) .token.unit{color:#ace12e}:host([code-theme=dark]) .token.url{color:#ff8a80}:host([code-theme=dark]) .token.variable{color:#ff8a80}pre[class*=language-].line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}pre[class*=language-].line-numbers>code{position:relative;white-space:inherit}.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:0;font-size:100%;left:-3.8em;width:3em;letter-spacing:-1px;border-right:1px solid #999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.line-numbers-rows>span{display:block;counter-increment:linenumber}.line-numbers-rows>span:before{content:counter(linenumber);color:#999;display:block;padding-right:.8em;text-align:right}:host{display:block}:host([hidden]){display:none} /*# sourceMappingURL=pfe-codeblock.min.css.map */</style>\n<slot></slot>`;\n  }\n\n  static get tag() {\n    return \"pfe-codeblock\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Codeblock\",\n      description: \"Render code in a styled and formatted way\",\n    };\n  }\n\n  get templateUrl() {\n    return \"pfe-codeblock.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-codeblock.scss\";\n  }\n\n  static get events() {\n    return {};\n  }\n\n  // Declare the type of this component\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  static get properties() {\n    return {\n      codeLanguage: {\n        title: \"Code Language\",\n        type: String,\n        values: [\"markup\", \"html\", \"xml\", \"svg\", \"mathml\", \"css\", \"clike\", \"javascript\", \"js\"],\n        default: \"markup\",\n        observer: \"_attributeChanged\",\n      },\n      codeLineNumbers: {\n        title: \"Enable Line Numbers\",\n        type: Boolean,\n        default: false,\n        observer: \"_attributeChanged\",\n      },\n      codeLineNumberStart: {\n        title: \"Set Line Number Start Value\",\n        type: Number,\n        default: 1,\n        observer: \"_attributeChanged\",\n      },\n      codeTheme: {\n        title: \"Code Theme\",\n        type: String,\n        values: [\"dark\", \"light\"],\n        default: \"light\",\n        observer: \"_attributeChanged\",\n      },\n    };\n  }\n\n  static get slots() {\n    return {};\n  }\n\n  get codeblock() {\n    return this._codeblock;\n  }\n\n  set codeblock(text) {\n    if (!text) {\n      return;\n    }\n\n    this._codeblock = text;\n    this.renderCodeblock();\n  }\n\n  // Declare the type of this component\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  constructor() {\n    super(PfeCodeblock, { type: PfeCodeblock.PfeType });\n\n    this._codeblock = null;\n    this._codeblockRender = null;\n    this._codeblockRenderOuterPreTag = null;\n    this._codeblockContainer = null;\n    this._readyStateChangeHandler = this._readyStateChangeHandler.bind(this);\n\n    // Add mutation observer to track text changes in the dom\n    this._observer = new MutationObserver((mutationList, observer) => {\n      if (!this._codeblockContainer.textContent) {\n        this._codeblockRender.innerHTML = \"\";\n        return;\n      }\n\n      // TODO: when we stop supporting IE11, the need to disconnect and\n      // then reconnect will no longer be needed\n      if (window.ShadyCSS) {\n        observer.disconnect();\n      }\n\n      this.codeblock = this._codeblockContainer.textContent;\n\n      if (window.ShadyCSS) {\n        this._muationObserve();\n      }\n    });\n  }\n\n  //return class for line numbers\n  lineNumberCssClass() {\n    return this.codeLineNumbers ? \" line-numbers\" : \"\";\n  }\n\n  //return a valid prism.js language css class\n  codePrismLanguage() {\n    return \"language-\" + this.codeLanguage;\n  }\n\n  //return a prism.js language lib\n  codePrismLanguageLoad() {\n    return Prism.languages[this.codeLanguage];\n  }\n\n  //return applied classes for pre\n  appliedCssClasss() {\n    return this.codePrismLanguage() + this.lineNumberCssClass();\n  }\n\n  //apply classes to the markup for prism.js\n  setComponentClasses() {\n    this._codeblockRender.setAttribute(\"class\", this.codePrismLanguage());\n    this._codeblockRenderOuterPreTag.setAttribute(\"class\", this.appliedCssClasss());\n    if (this.codeLineNumberStart !== 1) {\n      this._codeblockRenderOuterPreTag.style.counterReset = \"linenumber \" + (this.codeLineNumberStart - 1);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    //create dom elements and attach language styles\n    this._codeblockRenderOuterPreTag = document.createElement(\"pre\");\n    this._codeblockRender = document.createElement(\"code\");\n    this._codeblockRender.setAttribute(\"codeblock-render\", \"\");\n    this.setComponentClasses();\n    this._codeblockRenderOuterPreTag.appendChild(this._codeblockRender);\n\n    //Add to shadow-root\n    this.shadowRoot.appendChild(this._codeblockRenderOuterPreTag);\n\n    //Hide dom element and init prism.js\n    if (!this._codeblockContainer) {\n      this._codeblockContainer = this.querySelector(\"[codeblock-container]\");\n      this._codeblockContainer.style.display = \"none\";\n      this._init();\n    }\n  }\n\n  disconnectedCallback() {\n    this._observer.disconnect();\n  }\n\n  // Process the attribute change\n  attributeChangedCallback(attr, oldValue, newValue) {\n    super.attributeChangedCallback(attr, oldValue, newValue);\n  }\n\n  _readyStateChangeHandler(event) {\n    if (event.target.readyState === \"complete\") {\n      document.removeEventListener(\"readystatechange\", this._readyStateChangeHandler);\n      this._init();\n    }\n  }\n\n  _attributeChanged() {\n    if (this._codeblockRender !== null && this._codeblockRenderOuterPreTag !== null) {\n      this.updateCodeblock();\n    }\n  }\n\n  _init() {\n    if (this._codeblockContainer.textContent) {\n      let tmpCodeblockObject = this.trimWhitespaceLines(this._codeblockContainer.textContent);\n      this.codeblock = tmpCodeblockObject.stringValue;\n    }\n    this._muationObserve();\n  }\n\n  //Accepts string and Returns trimed string and new line count\n  trimWhitespaceLines(stringToTrim) {\n    //return if nothing passed\n    if (!stringToTrim) {\n      return \"\";\n    }\n    let returnValue = { stringValue: \"\", lineCount: 0 };\n\n    let tmpTrimArray = stringToTrim.trim().split(\"\\n\");\n\n    let tmpLineCount = tmpTrimArray.length;\n    returnValue.stringValue = tmpTrimArray.join(\"\\n\");\n    returnValue.lineCount = tmpLineCount;\n\n    return returnValue;\n  }\n\n  processLineNumbers(htmlStringToProcess) {\n    //return if nothing passed\n    if (!htmlStringToProcess) {\n      return \"\";\n    }\n\n    let returnHtmlString = htmlStringToProcess + '<span class=\"line-numbers-rows\" aria-hidden=\"true\">';\n    let lineStringObject = this.trimWhitespaceLines(htmlStringToProcess);\n    for (var i = 0, len = lineStringObject.lineCount; i < len; i++) {\n      returnHtmlString = returnHtmlString + \"<span></span>\";\n    }\n    returnHtmlString = returnHtmlString + \"</span>\";\n    return returnHtmlString;\n  }\n\n  updateCodeblock() {\n    this.setComponentClasses();\n    this.renderCodeblock();\n  }\n\n  renderCodeblock() {\n    this._codeblockRender.innerHTML = Prism.highlight(\n      this._codeblock,\n      this.codePrismLanguageLoad(),\n      this.codePrismLanguage()\n    );\n\n    if (this.codeLineNumbers) {\n      let htmlString = this.processLineNumbers(this._codeblockRender.innerHTML);\n      this._codeblockRender.innerHTML = htmlString;\n    }\n  }\n\n  _muationObserve() {\n    this._observer.observe(this._codeblockContainer, observerConfig);\n  }\n}\n\nPFElement.create(PfeCodeblock);\n\nexport default PfeCodeblock;\n"],"names":["Array","prototype","includes","defineProperty","valueToFind","fromIndex","this","TypeError","o","Object","len","length","x","y","n","k","Math","max","abs","isNaN","Prism","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","SELECTOR","lang","logged","_self","uniqueId","_","manual","disableWorkerMessageHandler","encode","tokens","Token","type","content","alias","isArray","map","replace","toString","call","slice","obj","value","deepClone","visited","clone","id","util","objId","key","hasOwnProperty","forEach","v","i","element","test","className","parentElement","match","toLowerCase","document","Error","err","src","exec","stack","scripts","getElementsByTagName","defaultActivation","no","classList","contains","redef","languages","inside","before","insert","root","token","grammar","ret","newToken","old","DFS","callback","property","propertyType","async","highlightAllUnder","container","env","hooks","run","elements","apply","querySelectorAll","selector","highlightElement","language","getLanguage","parent","nodeName","textContent","insertHighlightedCode","highlightedCode","innerHTML","code","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","highlight","text","tokenize","rest","tokenList","LinkedList","head","matchGrammar","startNode","startPos","rematch","patterns","j","cause","flags","patternObj","lookbehind","greedy","pattern","global","RegExp","source","currentNode","next","pos","tail","reach","str","removeCount","matchPattern","from","index","to","p","matchStr","after","removeFrom","prev","addAfter","wrapped","list","array","node","push","toArray","name","all","callbacks","matchedStr","lastIndex","lookbehindLength","newNode","removeRange","count","s","e","aliases","classes","attributes","tag","join","addEventListener","message","parse","immediateClose","close","readyState","script","currentScript","highlightAutomaticallyCallback","highlightAll","hasAttribute","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","setLanguageClass","trim","module","exports","markup","add","tagName","includedCdataInside","def","insertBefore","html","mathml","svg","xml","extend","ssml","atom","rss","string","css","addInlined","clike","javascript","regex","js","Element","matches","msMatchesSelector","webkitMatchesSelector","autoloader","xhr","pre","setAttribute","appendChild","createElement","getAttribute","extension","plugins","loadLanguages","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","warn","arguments","observerConfig","PfeCodeblock","PFElement","_codeblock","renderCodeblock","PfeTypes","Content","String","Boolean","Number","codeLineNumbers","codeLanguage","codePrismLanguage","lineNumberCssClass","_codeblockRender","_codeblockRenderOuterPreTag","appliedCssClasss","codeLineNumberStart","style","counterReset","setComponentClasses","shadowRoot","_codeblockContainer","querySelector","display","_init","_observer","disconnect","attr","oldValue","newValue","event","target","removeEventListener","_readyStateChangeHandler","updateCodeblock","tmpCodeblockObject","trimWhitespaceLines","codeblock","stringValue","_muationObserve","stringToTrim","returnValue","lineCount","tmpTrimArray","split","tmpLineCount","htmlStringToProcess","returnHtmlString","htmlString","codePrismLanguageLoad","processLineNumbers","observe","PfeType","_this","bind","MutationObserver","mutationList","observer","ShadyCSS","create"],"mappings":"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"}